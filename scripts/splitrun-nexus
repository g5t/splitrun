#!/usr/bin/env bash

# check if the expected containers are running:
declare -A containers
for i in $(podman ps --format '{{.Names}}'); do
  containers[$i]=1
done
for expected in broker forwarder writer efu; do
  if [ ! ${containers[$expected]} ]; then
    echo "Expected container '${expected}' to be running"
    exit 1
  fi
done
# Stash the location of _this_ script file to know where the implementation resides
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)

filepath="$(realpath -s "$1")"
INSTRUMENT_DIR=$(dirname "$filepath")
INSTRUMENT="$(basename "$filepath")"
# Remove the script name and {instrument file}:
shift
export ARGUMENTS="$*"

echo "Execute instrument ${INSTRUMENT} in directory ${INSTRUMENT_DIR} with arguments ${ARGUMENTS}"

now=$(date -u +%Y%m%dT%H%M%S)
filename="${INSTRUMENT%.*}_${now}.h5"
prefix="mcstas:"

IMPL="${SCRIPT_DIR}/splitrun-nexus-impl"
IMPL_PARAMS=()
IMPL_PARAMS+=(-b "localhost:9092")
IMPL_PARAMS+=(-w ${INSTRUMENT_DIR})
IMPL_PARAMS+=(-c "ForwardConfig")
IMPL_PARAMS+=(-p ${prefix} --parameter-topic "SimulatedParameters")
IMPL_PARAMS+=(-o "WriterCommand" -j "WriterJob")
IMPL_PARAMS+=(--event-source "caen" --event-topic "SimulatedEvents")
IMPL_PARAMS+=(--filename "${filename}")
IMPL_PARAMS+=(--origin "sample_stack")
if test -f "${INSTRUMENT_DIR}/${INSTRUMENT%.*}.json"; then
  echo "Run using pre-defined structure from ${INSTRUMENT%.*}.json"
  IMPL_PARAMS+=(--nexus-structure "${INSTRUMENT%.*}.json")
fi
IMPL_PARAMS+=(--nexus-structure-dump "${INSTRUMENT_DIR}/${INSTRUMENT%.}.dump.json")

if ${IMPL} "${IMPL_PARAMS[@]}" -- "${INSTRUMENT}" ${ARGUMENTS}; then
  # The writer stores its file *inside* the container, but we want it outside:
  echo "Copy ${filename} from the writer container to the instrument directory"
  podman cp writer:"/output/${filename}" "${INSTRUMENT_DIR}/."
  podman exec writer rm "/output/${filename}"

  # Manipulate the produced file a bit:
  if test -f "${INSTRUMENT_DIR}/${filename}"; then
	  # force contiguous memory layout in the generated file (removes ability to append to datasets)
	  h5repack -l CONTI "${INSTRUMENT_DIR}/${filename}" "${INSTRUMENT_DIR}/${filename}.pack"
	  mv "${INSTRUMENT_DIR}/${filename}.pack" "${INSTRUMENT_DIR}/${filename}"

	  # Finally, add the HDF5 representation of the instrument to the file
	  # copy the instrument's HDF5 representation into the file (which grows if forced into contiguous memory?!)
	  mp-insert-hdf5-instr --parent ${prefix%:*} --outfile "${INSTRUMENT_DIR}/${filename}" "${INSTRUMENT_DIR}/${INSTRUMENT}"
  else
	  echo "${INSTRUMENT_DIR}/${filename} does not exist. File writer failed."
  fi
else
  echo "Impl did not finish. After kafka-to-nexus exits examine output file in-container"
  echo "    'podman exec writer ls \"/output/${filename}\"'"
fi